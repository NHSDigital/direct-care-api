AWSTemplateFormatVersion: "2010-09-09"
Description: "This template deploys a CodePipeline with its required resources.

  The following stages are predefined in this template: - Source - UpdatePipeline
  - BuildAndDeployFeatureStack (FeatureGitBranch only) - BuildAndPackage (MainGitBranch
  only) - DeployTest (MainGitBranch only) - DeployProd (MainGitBranch only)

  **WARNING** You will be billed for the AWS resources used if you create a stack
  from this template.

  "
Parameters:
  GitProviderType:
    Type: String
    Default: GitHub
  FullRepositoryId:
    Type: String
    Default: NHSDigital/direct-care-api
  MainGitBranch:
    Type: String
    Default: main
  SamTemplate:
    Type: String
    Default: template.yaml
  TestingRegion:
    Type: String
    Default: eu-west-2
  TestingStackName:
    Type: String
    Default: dev
  TestingPipelineExecutionRole:
    Type: String
    Default: arn:aws:iam::436014718090:role/aws-sam-cli-managed-dev-pipe-PipelineExecutionRole-18KH3LWMG1IOK
  TestingCloudFormationExecutionRole:
    Type: String
    Default: arn:aws:iam::436014718090:role/aws-sam-cli-managed-dev-p-CloudFormationExecutionR-GGEE7EHS6BHC
  TestingArtifactBucket:
    Type: String
    Default: aws-sam-cli-managed-dev-pipeline-artifactsbucket-1fqcuh5s5v0ut
  TestingImageRepository:
    Type: String
    Default: ""
  ProdRegion:
    Type: String
    Default: eu-west-2
  ProdStackName:
    Type: String
    Default: int
  ProdPipelineExecutionRole:
    Type: String
    Default: arn:aws:iam::503308544674:role/aws-sam-cli-managed-int-pipe-PipelineExecutionRole-1IYPX8GCW6EBK
  ProdCloudFormationExecutionExeRole:
    Type: String
    Default: arn:aws:iam::503308544674:role/aws-sam-cli-managed-int-p-CloudFormationExecutionR-1FQ4IXL22V6FR
  ProdArtifactBucket:
    Type: String
    Default: aws-sam-cli-managed-int-pipeline-artifactsbucket-5btgicdjbd5g
  ProdImageRepository:
    Type: String
    Default: ""
  CodeStarConnectionArn:
    Type: String
    Default: ""
  FeatureGitBranch:
    Type: String
    Default: ""
Conditions:
  IsMainBranchPipeline:
    Fn::Equals:
      - Ref: FeatureGitBranch
      - ""
  IsFeatureBranchPipeline:
    Fn::Not:
      - Condition: IsMainBranchPipeline
  CreateConnection:
    Fn::Equals:
      - Ref: CodeStarConnectionArn
      - ""
Resources:
  CodeStarConnection:
    Condition: CreateConnection
    Type: AWS::CodeStarConnections::Connection
    Properties:
      ConnectionName: GitRepositoryConnection
      ProviderType:
        Ref: GitProviderType
    Metadata:
      SamResourceId: CodeStarConnection
  Pipeline:
    Type: AWS::CodePipeline::Pipeline
    Properties:
      ArtifactStore:
        Location:
          Ref: PipelineArtifactsBucket
        Type: S3
      RoleArn:
        Fn::GetAtt:
          - CodePipelineExecutionRole
          - Arn
      RestartExecutionOnUpdate: true
      Stages:
        - Name: Source
          Actions:
            - Name: SourceCodeRepo
              ActionTypeId:
                Category: Source
                Owner: AWS
                Provider: CodeStarSourceConnection
                Version: "1"
              Configuration:
                ConnectionArn:
                  Fn::If:
                    - CreateConnection
                    - Ref: CodeStarConnection
                    - Ref: CodeStarConnectionArn
                FullRepositoryId:
                  Ref: FullRepositoryId
                BranchName:
                  Fn::If:
                    - IsFeatureBranchPipeline
                    - Ref: FeatureGitBranch
                    - Ref: MainGitBranch
              OutputArtifacts:
                - Name: SourceCodeAsZip
              RunOrder: 1
        - Name: UpdatePipeline
          Actions:
            - Name: CreateChangeSet
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Provider: CloudFormation
                Version: "1"
              Configuration:
                ActionMode: CHANGE_SET_REPLACE
                RoleArn:
                  Fn::GetAtt:
                    - PipelineStackCloudFormationExecutionRole
                    - Arn
                StackName:
                  Ref: AWS::StackName
                ChangeSetName:
                  Fn::Sub: ${AWS::StackName}-ChangeSet
                TemplatePath: SourceCodeAsZip::codepipeline.yaml
                Capabilities: CAPABILITY_NAMED_IAM
                ParameterOverrides:
                  Fn::Sub:
                    "{\n  \"FeatureGitBranch\": \"${FeatureGitBranch}\",\n  \"\
                    CodeStarConnectionArn\": \"${CodeStarConnectionArn}\"\n}\n"
              InputArtifacts:
                - Name: SourceCodeAsZip
              RunOrder: 1
            - Name: ExecuteChangeSet
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Provider: CloudFormation
                Version: "1"
              Configuration:
                ActionMode: CHANGE_SET_EXECUTE
                RoleArn:
                  Fn::GetAtt:
                    - PipelineStackCloudFormationExecutionRole
                    - Arn
                StackName:
                  Ref: AWS::StackName
                ChangeSetName:
                  Fn::Sub: ${AWS::StackName}-ChangeSet
              OutputArtifacts:
                - Name:
                    Fn::Sub: ${AWS::StackName}ChangeSet
              RunOrder: 2
        - Fn::If:
            - IsFeatureBranchPipeline
            - Name: BuildAndDeployFeatureStack
              Actions:
                - Name: CodeBuild
                  ActionTypeId:
                    Category: Build
                    Owner: AWS
                    Provider: CodeBuild
                    Version: "1"
                  Configuration:
                    ProjectName:
                      Ref: CodeBuildProjectBuildAndDeployFeature
                  InputArtifacts:
                    - Name: SourceCodeAsZip
            - Ref: AWS::NoValue
        - Fn::If:
            - IsMainBranchPipeline
            - Name: BuildAndPackage
              Actions:
                - Name: CodeBuild
                  ActionTypeId:
                    Category: Build
                    Owner: AWS
                    Provider: CodeBuild
                    Version: "1"
                  Configuration:
                    ProjectName:
                      Ref: CodeBuildProjectBuildAndPackage
                  InputArtifacts:
                    - Name: SourceCodeAsZip
                  OutputArtifacts:
                    - Name: BuildArtifactAsZip
            - Ref: AWS::NoValue
        - Fn::If:
            - IsMainBranchPipeline
            - Name: DeployTest
              Actions:
                - Name: DeployTest
                  ActionTypeId:
                    Category: Build
                    Owner: AWS
                    Provider: CodeBuild
                    Version: "1"
                  Configuration:
                    ProjectName:
                      Ref: CodeBuildProjectDeploy
                    EnvironmentVariables:
                      Fn::Sub:
                        "[\n  {\"name\": \"ENV_TEMPLATE\", \"value\": \"packaged-test.yaml\"\
                        },\n  {\"name\": \"ENV_REGION\", \"value\": \"${TestingRegion}\"\
                        },\n  {\"name\": \"ENV_STACK_NAME\", \"value\": \"${TestingStackName}\"\
                        },\n  {\"name\": \"ENV_PIPELINE_EXECUTION_ROLE\", \"value\": \"\
                        ${TestingPipelineExecutionRole}\"},\n  {\"name\": \"ENV_CLOUDFORMATION_EXECUTION_ROLE\"\
                        , \"value\": \"${TestingCloudFormationExecutionRole}\"},\n  {\"\
                        name\": \"ENV_BUCKET\", \"value\": \"${TestingArtifactBucket}\"\
                        },\n  {\"name\": \"ENV_IMAGE_REPOSITORY\", \"value\": \"${TestingImageRepository}\"\
                        }\n]\n"
                  InputArtifacts:
                    - Name: BuildArtifactAsZip
                  RunOrder: 1
            - Ref: AWS::NoValue
        - Fn::If:
            - IsMainBranchPipeline
            - Name: DeployProd
              Actions:
                - Name: DeployProd
                  ActionTypeId:
                    Category: Build
                    Owner: AWS
                    Provider: CodeBuild
                    Version: "1"
                  RunOrder: 2
                  Configuration:
                    ProjectName:
                      Ref: CodeBuildProjectDeploy
                    EnvironmentVariables:
                      Fn::Sub:
                        "[\n  {\"name\": \"ENV_TEMPLATE\", \"value\": \"packaged-prod.yaml\"\
                        },\n  {\"name\": \"ENV_REGION\", \"value\": \"${ProdRegion}\"},\n\
                        \  {\"name\": \"ENV_STACK_NAME\", \"value\": \"${ProdStackName}\"\
                        },\n  {\"name\": \"ENV_PIPELINE_EXECUTION_ROLE\", \"value\": \"\
                        ${ProdPipelineExecutionRole}\"},\n  {\"name\": \"ENV_CLOUDFORMATION_EXECUTION_ROLE\"\
                        , \"value\": \"${ProdCloudFormationExecutionExeRole}\"},\n  {\"\
                        name\": \"ENV_BUCKET\", \"value\": \"${ProdArtifactBucket}\"},\n\
                        \  {\"name\": \"ENV_IMAGE_REPOSITORY\", \"value\": \"${ProdImageRepository}\"\
                        }\n]\n"
                  InputArtifacts:
                    - Name: BuildArtifactAsZip
            - Ref: AWS::NoValue
    Metadata:
      SamResourceId: Pipeline
  PipelineArtifactsBucket:
    Type: AWS::S3::Bucket
    DeletionPolicy: Retain
    UpdateReplacePolicy: Retain
    Properties:
      VersioningConfiguration:
        Status: Enabled
      LoggingConfiguration:
        DestinationBucketName:
          Ref: PipelineArtifactsLoggingBucket
        LogFilePrefix: artifacts-logs
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: AES256
    Metadata:
      SamResourceId: PipelineArtifactsBucket
  PipelineArtifactsBucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket:
        Ref: PipelineArtifactsBucket
      PolicyDocument:
        Statement:
          - Effect: Deny
            Action: s3:*
            Principal: "*"
            Resource:
              - Fn::Sub: ${PipelineArtifactsBucket.Arn}/*
              - Fn::GetAtt:
                  - PipelineArtifactsBucket
                  - Arn
            Condition:
              Bool:
                aws:SecureTransport: false
          - Action:
              - s3:*
            Effect: Allow
            Resource:
              - Fn::Sub: arn:${AWS::Partition}:s3:::${PipelineArtifactsBucket}
              - Fn::Sub: arn:${AWS::Partition}:s3:::${PipelineArtifactsBucket}/*
            Principal:
              AWS:
                - Fn::GetAtt:
                    - CodePipelineExecutionRole
                    - Arn
    Metadata:
      SamResourceId: PipelineArtifactsBucketPolicy
  PipelineArtifactsLoggingBucket:
    Type: AWS::S3::Bucket
    DeletionPolicy: Retain
    UpdateReplacePolicy: Retain
    Properties:
      AccessControl: LogDeliveryWrite
      VersioningConfiguration:
        Status: Enabled
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: AES256
    Metadata:
      SamResourceId: PipelineArtifactsLoggingBucket
  PipelineArtifactsLoggingBucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket:
        Ref: PipelineArtifactsLoggingBucket
      PolicyDocument:
        Statement:
          - Effect: Deny
            Action: s3:*
            Principal: "*"
            Resource:
              - Fn::Sub: ${PipelineArtifactsLoggingBucket.Arn}/*
              - Fn::GetAtt:
                  - PipelineArtifactsLoggingBucket
                  - Arn
            Condition:
              Bool:
                aws:SecureTransport: false
    Metadata:
      SamResourceId: PipelineArtifactsLoggingBucketPolicy
  CodePipelineExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Action:
              - sts:AssumeRole
            Effect: Allow
            Principal:
              Service:
                - codepipeline.amazonaws.com
      Policies:
        - PolicyName: CodePipelineAccess
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - iam:PassRole
                Resource: "*"
        - PolicyName: CodeStarConnectionAccess
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - codestar-connections:UseConnection
                Resource:
                  Fn::If:
                    - CreateConnection
                    - Ref: CodeStarConnection
                    - Ref: CodeStarConnectionArn
        - PolicyName: CodePipelineCodeAndS3Bucket
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Action:
                  - s3:GetBucketAcl
                  - s3:GetBucketLocation
                Effect: Allow
                Resource:
                  Fn::GetAtt:
                    - PipelineArtifactsBucket
                    - Arn
              - Action:
                  - s3:GetObject
                  - s3:GetObjectVersion
                  - s3:PutObject
                Effect: Allow
                Resource:
                  Fn::Sub: ${PipelineArtifactsBucket.Arn}/*
        - PolicyName: CodePipelineCodeBuildAndCloudformationAccess
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - codebuild:StartBuild
                  - codebuild:BatchGetBuilds
                Resource:
                  - Fn::If:
                      - IsFeatureBranchPipeline
                      - Fn::GetAtt:
                          - CodeBuildProjectBuildAndDeployFeature
                          - Arn
                      - Ref: AWS::NoValue
                  - Fn::If:
                      - IsMainBranchPipeline
                      - Fn::GetAtt:
                          - CodeBuildProjectBuildAndPackage
                          - Arn
                      - Ref: AWS::NoValue
                  - Fn::If:
                      - IsMainBranchPipeline
                      - Fn::GetAtt:
                          - CodeBuildProjectDeploy
                          - Arn
                      - Ref: AWS::NoValue
              - Effect: Allow
                Action:
                  - cloudformation:CreateStack
                  - cloudformation:DescribeStacks
                  - cloudformation:DeleteStack
                  - cloudformation:UpdateStack
                  - cloudformation:CreateChangeSet
                  - cloudformation:ExecuteChangeSet
                  - cloudformation:DeleteChangeSet
                  - cloudformation:DescribeChangeSet
                  - cloudformation:SetStackPolicy
                  - cloudformation:SetStackPolicy
                  - cloudformation:ValidateTemplate
                Resource:
                  - Fn::Sub: arn:${AWS::Partition}:cloudformation:${AWS::Region}:${AWS::AccountId}:stack/${AWS::StackName}/*
    Metadata:
      SamResourceId: CodePipelineExecutionRole
  PipelineStackCloudFormationExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          Action: sts:AssumeRole
          Effect: Allow
          Principal:
            Service: cloudformation.amazonaws.com
      Policies:
        - PolicyName: GrantCloudFormationFullAccess
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action: "*"
                Resource: "*"
    Metadata:
      SamResourceId: PipelineStackCloudFormationExecutionRole
  CodeBuildServiceRole:
    Type: AWS::IAM::Role
    Properties:
      Tags:
        - Key: Role
          Value: aws-sam-pipeline-codebuild-service-role
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Action:
              - sts:AssumeRole
            Effect: Allow
            Principal:
              Service:
                - codebuild.amazonaws.com
      Policies:
        - PolicyName: CodeBuildLogs
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                Resource:
                  - Fn::Sub: arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/codebuild/*
        - PolicyName: CodeBuildArtifactsBucket
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - s3:GetObject
                  - s3:GetObjectVersion
                  - s3:PutObject
                Resource:
                  - Fn::Sub: arn:${AWS::Partition}:s3:::${PipelineArtifactsBucket}/*
        - PolicyName: AssumeStagePipExecutionRoles
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Action:
                  - sts:AssumeRole
                Effect: Allow
                Resource: "*"
                Condition:
                  StringEquals:
                    aws:ResourceTag/Role: pipeline-execution-role
    Metadata:
      SamResourceId: CodeBuildServiceRole
  CodeBuildProjectBuildAndDeployFeature:
    Condition: IsFeatureBranchPipeline
    Type: AWS::CodeBuild::Project
    Properties:
      Artifacts:
        Type: CODEPIPELINE
      Environment:
        Type: LINUX_CONTAINER
        ComputeType: BUILD_GENERAL1_SMALL
        Image: aws/codebuild/amazonlinux2-x86_64-standard:3.0
        PrivilegedMode: true
        EnvironmentVariables:
          - Name: SAM_TEMPLATE
            Value:
              Ref: SamTemplate
          - Name: TESTING_REGION
            Value:
              Ref: TestingRegion
          - Name: TESTING_PIPELINE_EXECUTION_ROLE
            Value:
              Ref: TestingPipelineExecutionRole
          - Name: TESTING_CLOUDFORMATION_EXECUTION_ROLE
            Value:
              Ref: TestingCloudFormationExecutionRole
          - Name: TESTING_ARTIFACT_BUCKET
            Value:
              Ref: TestingArtifactBucket
          - Name: TESTING_IMAGE_REPOSITORY
            Value:
              Ref: TestingImageRepository
          - Name: FEATURE_BRANCH_NAME
            Value:
              Ref: FeatureGitBranch
      ServiceRole:
        Fn::GetAtt:
          - CodeBuildServiceRole
          - Arn
      Source:
        Type: CODEPIPELINE
        BuildSpec: pipeline/buildspec_feature.yml
    Metadata:
      SamResourceId: CodeBuildProjectBuildAndDeployFeature
  CodeBuildProjectBuildAndPackage:
    Condition: IsMainBranchPipeline
    Type: AWS::CodeBuild::Project
    Properties:
      Artifacts:
        Type: CODEPIPELINE
      Environment:
        Type: LINUX_CONTAINER
        ComputeType: BUILD_GENERAL1_SMALL
        Image: aws/codebuild/amazonlinux2-x86_64-standard:3.0
        PrivilegedMode: true
        EnvironmentVariables:
          - Name: SAM_TEMPLATE
            Value:
              Ref: SamTemplate
          - Name: TESTING_REGION
            Value:
              Ref: TestingRegion
          - Name: PROD_REGION
            Value:
              Ref: ProdRegion
          - Name: TESTING_PIPELINE_EXECUTION_ROLE
            Value:
              Ref: TestingPipelineExecutionRole
          - Name: PROD_PIPELINE_EXECUTION_ROLE
            Value:
              Ref: ProdPipelineExecutionRole
          - Name: TESTING_ARTIFACT_BUCKET
            Value:
              Ref: TestingArtifactBucket
          - Name: PROD_ARTIFACT_BUCKET
            Value:
              Ref: ProdArtifactBucket
          - Name: TESTING_IMAGE_REPOSITORY
            Value:
              Ref: TestingImageRepository
          - Name: PROD_IMAGE_REPOSITORY
            Value:
              Ref: ProdImageRepository
      ServiceRole:
        Fn::GetAtt:
          - CodeBuildServiceRole
          - Arn
      Source:
        Type: CODEPIPELINE
        BuildSpec: pipeline/buildspec_build_package.yml
    Metadata:
      SamResourceId: CodeBuildProjectBuildAndPackage
  CodeBuildProjectDeploy:
    Condition: IsMainBranchPipeline
    Type: AWS::CodeBuild::Project
    Properties:
      Artifacts:
        Type: CODEPIPELINE
      Environment:
        Type: LINUX_CONTAINER
        ComputeType: BUILD_GENERAL1_SMALL
        Image: aws/codebuild/amazonlinux2-x86_64-standard:3.0
      ServiceRole:
        Fn::GetAtt:
          - CodeBuildServiceRole
          - Arn
      Source:
        Type: CODEPIPELINE
        BuildSpec: pipeline/buildspec_deploy.yml
    Metadata:
      SamResourceId: CodeBuildProjectDeploy
Outputs:
  CodeStarConnectionArn:
    Condition: CreateConnection
    Description:
      The Arn of AWS CodeStar Connection used to connect to external code
      repositories.
    Value:
      Ref: CodeStarConnection
