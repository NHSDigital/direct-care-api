AWSTemplateFormatVersion: "2010-09-09"
Transform: AWS::Serverless-2016-10-31
Description: >
  lambda-python3.9

  Sample SAM Template for lambda-python3.9

# More info about Globals: https://github.com/awslabs/serverless-application-model/blob/master/docs/globals.rst
Globals:
  Function:
    Timeout: 30
    MemorySize: 256

Parameters:
  EndpointUrl:
    Type: String
    Description: EndpointUrl
    Default: none

# Example of Mappings
# Mappings:
#   EnvVariables:
#     stage:
#         var1: user1
#         API_BASE_URL: https://baseurl1.com
#     prod:
#         var1: user2
#         API_BASE_URL: https://baseurl2.com

# SAM Connectors: https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/reference-sam-connector.html
# https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/sam-resource-connector.html
# More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
# More info about API Event Source: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#api

Resources:
  MainFunction:
    Type: AWS::Serverless::Function

    # Embedded connectors
    Connectors:
      InvokeAdd:
        Properties:
          Destination:
            Id: AddFunction
          Permissions:
            - Write
      InvokeMultiply:
        Properties:
          Destination:
            Id: MultiplyFunction
          Permissions:
            - Write
      InvokePower:
        Properties:
          Destination:
            Id: PowerFunction
          Permissions:
            - Write
      InvokePds:
        Properties:
          Destination:
            Id: PdsFunction
          Permissions:
            - Write
      InvokeSds:
        Properties:
          Destination:
            Id: SdsFunction
          Permissions:
            - Write

    Properties:
      CodeUri: lambdas/main/
      Handler: app.main_lambda.lambda_handler
      Runtime: python3.9
      Architectures:
        - x86_64
      Layers:
        - !Ref SharedLayer
      Environment:
        Variables:
          EndpointUrl: !Ref EndpointUrl
          AddFunction_ARN: !Sub ${AddFunction.Arn}
          MultiplyFunction_ARN: !Sub ${MultiplyFunction.Arn}
          PowerFunction_ARN: !Sub ${PowerFunction.Arn}
      Events:
        Calculate:
          Type: Api
          Properties:
            Path: /calculate
            Method: get

  AddFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: lambdas/add
      Handler: app.add_lambda.lambda_handler
      Runtime: python3.9
      Architectures:
        - x86_64
      Layers:
        - !Ref SharedLayer

  MultiplyFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: lambdas/multiply/
      Handler: app.multiply_lambda.lambda_handler
      Runtime: python3.9
      Architectures:
        - x86_64
      Layers:
        - !Ref SharedLayer

  PowerFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: lambdas/power/
      Handler: app.power_lambda.lambda_handler
      Runtime: python3.9
      Architectures:
        - x86_64
      Layers:
        - !Ref SharedLayer

  PdsFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: lambdas/pds/
      Handler: pds_lambda.lambda_handler
      Runtime: python3.9
      Architectures:
        - x86_64
      Layers:
        - !Ref SharedLayer

  SdsFunction:
    Type: AWS::Serverless::Function 
    Properties:
      CodeUri: lambdas/sds/
      Handler: sds_lambda.lambda_handler
      Runtime: python3.9
      Architectures:
        - x86_64
      Layers:
        - !Ref SharedLayer

  SharedLayer:
    Type: AWS::Serverless::LayerVersion
    Properties:
      ContentUri: shared/
      CompatibleRuntimes:
        - python3.9
    Metadata:
      BuildMethod: python3.9 # Required to have AWS SAM build this layer

Outputs:
  # ServerlessRestApi is an implicit API created out of Events key under Serverless::Function
  # Find out more about other implicit resources you can reference within SAM
  # https://github.com/awslabs/serverless-application-model/blob/master/docs/internals/generated_resources.rst#api
  DirectCareApi:
    Description: "API Gateway endpoint URL for Prod stage for the Main function"
    Value: !Sub "https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/calculate/"
  DirectCareFunction:
    Description: "Main Lambda Function ARN"
    Value: !GetAtt MainFunction.Arn
  DirectCareFunctionIamRole:
    Description: "Implicit IAM Role created for the Main function"
    Value: !GetAtt MainFunctionRole.Arn
